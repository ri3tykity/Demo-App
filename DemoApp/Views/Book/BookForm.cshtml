@model DemoApp.ViewModel.FormBookViewModel

@{
    ViewBag.Title = "Book";
    ViewBag.Book = "active";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

    <p class="alert-danger">@ViewBag.Message</p>

<div class="row">
    <div class="col-md-5 offset-1 mt-lg-2">
        @if (Model.Id == 0)
        {
            <h3>Add new book</h3>
        }
        else
        {
            <h3>Edit book</h3>
        }
        <br />
        @using (Html.BeginForm("Save", "Book"))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group mt-3">
                    @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownListFor(model => model.Authors, new SelectList(Model.Authors, "Id", "FirstName"), "Select Author", new { htmlAttributes = new { @class = "form-control" } })*@
                        <table>
                            @for (int i = 0; i < Model.Authors.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        <div class="form-check">
                                            @Html.CheckBoxFor(m => m.Authors[i].Selected, new { @class = "form-check-input" })
                                            <label class="form-check-label" for="flexCheckDefault">
                                                @Html.DisplayFor(m => m.Authors[i].Text)
                                            </label>                                               
                                                @Html.HiddenFor(m => m.Authors[i].Value)
                                                @Html.HiddenFor(m => m.Authors[i].Text)
                                        </div>
                                    </td>
                                </tr>
                            }
                        </table>
                        @Html.ValidationMessageFor(model => model.Authors, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.Id)
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>
        }

        <div>
            <br />
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

    

    
